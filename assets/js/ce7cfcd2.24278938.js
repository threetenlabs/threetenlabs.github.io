"use strict";(self.webpackChunkthreeten_labs_site=self.webpackChunkthreeten_labs_site||[]).push([[5203],{6553:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>n,metadata:()=>r,toc:()=>h});var o=a(5893),i=a(1151);const n={title:"The Making of Y.A.S.S. Spider Solitaire",description:"Dive into the humorous tale of developing Yet Another Spider Solitaire, an iOS and Android game built with Flutter and Firebase.",slug:"making-yass-spider-solitaire",date:new Date("2024-04-26T00:00:00.000Z"),authors:[{name:"Ryan Sites",title:"Co-Founder ThreeTen Labs",url:"https://github.com/seesharpguy",image_url:"https://avatars.githubusercontent.com/u/3216346?v=4"}],tags:["Y.A.S.S","flutter","firebase","getx","mobile development"],image:"https://avatars.githubusercontent.com/u/150145651?v=4",hide_table_of_contents:!1},s=void 0,r={permalink:"/blog/making-yass-spider-solitaire",source:"@site/blog/04-26-2024.mdx",title:"The Making of Y.A.S.S. Spider Solitaire",description:"Dive into the humorous tale of developing Yet Another Spider Solitaire, an iOS and Android game built with Flutter and Firebase.",date:"2024-04-26T00:00:00.000Z",tags:[{label:"Y.A.S.S",permalink:"/blog/tags/y-a-s-s"},{label:"flutter",permalink:"/blog/tags/flutter"},{label:"firebase",permalink:"/blog/tags/firebase"},{label:"getx",permalink:"/blog/tags/getx"},{label:"mobile development",permalink:"/blog/tags/mobile-development"}],readingTime:4.385,hasTruncateMarker:!1,authors:[{name:"Ryan Sites",title:"Co-Founder ThreeTen Labs",url:"https://github.com/seesharpguy",image_url:"https://avatars.githubusercontent.com/u/3216346?v=4",imageURL:"https://avatars.githubusercontent.com/u/3216346?v=4"}],frontMatter:{title:"The Making of Y.A.S.S. Spider Solitaire",description:"Dive into the humorous tale of developing Yet Another Spider Solitaire, an iOS and Android game built with Flutter and Firebase.",slug:"making-yass-spider-solitaire",date:"2024-04-26T00:00:00.000Z",authors:[{name:"Ryan Sites",title:"Co-Founder ThreeTen Labs",url:"https://github.com/seesharpguy",image_url:"https://avatars.githubusercontent.com/u/3216346?v=4",imageURL:"https://avatars.githubusercontent.com/u/3216346?v=4"}],tags:["Y.A.S.S","flutter","firebase","getx","mobile development"],image:"https://avatars.githubusercontent.com/u/150145651?v=4",hide_table_of_contents:!1},unlisted:!1},l={authorsImageUrls:[void 0]},h=[{value:"Why Y.A.S.S. you ask?",id:"why-yass-you-ask",level:2},{value:"Choosing Our Tools",id:"choosing-our-tools",level:2},{value:"Flutter Takes Flight",id:"flutter-takes-flight",level:2},{value:"GetX to the Rescue",id:"getx-to-the-rescue",level:2},{value:"Lessons Learned",id:"lessons-learned",level:2},{value:"Shameless Plug",id:"shameless-plug",level:2},{value:"In Conclusion",id:"in-conclusion",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{Head:a}=t;return a||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(a,{children:[(0,o.jsx)("meta",{name:"keywords",content:"Y.A.S.S., Spider Solitaire, Flutter, Firebase, GetX, game development, mobile apps"}),(0,o.jsx)("meta",{name:"twitter:card",content:"summary_large_image"}),(0,o.jsx)("link",{rel:"preconnect",href:"https://threetenlabs.com"}),(0,o.jsx)("script",{type:"application/ld+json",children:JSON.stringify({"@context":"https://schema.org/","@type":"BlogPosting",headline:"The Making of Y.A.S.S. My Journey in Yet Another Spider Solitaire",image:"https://avatars.githubusercontent.com/u/150145651?v=4",author:{"@type":"Person",name:"Ryan Sites",url:"https://github.com/seesharpguy"},publisher:{"@type":"Organization",name:"Three Ten Labs",url:"https://threetenlabs.com",logo:{"@type":"ImageObject",url:"https://avatars.githubusercontent.com/u/150145651?v=4"}},datePublished:"2024-04-26"})})]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Hello everyone, and welcome to my first blog!"}),'\nAfter a rigorous, caffeine-fueled 8 months, we\'ve completed our first mobile game, Y.A.S.S. (Yet Another Spider Solitaire). And yes, I hear you chuckling! "Yet another one?" Absolutely, because clearly what the world needs is another version of Spider Solitaire on iOS and Android. Trust me, ours has its own set of features that hopefully differentiate it from others!']}),"\n",(0,o.jsx)(t.h2,{id:"why-yass-you-ask",children:"Why Y.A.S.S. you ask?"}),"\n",(0,o.jsxs)(t.p,{children:["Around August 2023, I was in a conversation with my friend and co-founder of ThreeTenLabs (more on that in a moment). I had mentioned to him that I had been spending some time with ",(0,o.jsx)(t.a,{href:"https://flutter.dev/",children:"Flutter"})," to get myself more familiar with cross-platform development. He responded with immediate excitement and exclaimed that he too had been exploring Flutter and, in fact, had begun developing a Spider-Solitaire game in his effort to dip his toes in the water.\nWe decided that day, that we should join forces. I help him with the game, and he helps me with the idea that I had for a game (more on that in a moment as well). We knew that it would behoove us to start an LLC, and since we both have birthdays on the 10th day of March, ThreeTen Labs was formed. And since we are both software engineers, huge fans of acronyms, and even bigger fans of facetiousness, YASS (Yet Another Spider Solitaire) was born."]}),"\n",(0,o.jsx)(t.h2,{id:"choosing-our-tools",children:"Choosing Our Tools"}),"\n",(0,o.jsxs)(t.p,{children:["The tech stack was a major decision from the get-go. As noted before, Flutter was the bedrock technology that allowed us to share the same codebase across multiple target platforms and was known for its beautiful native interfaces. We needed a backend for transactional reads and writes of data to help keep things secure for in-app messaging, monitoring, and authentication.\nCrashlytics allowed us to watch it crash (a lot!\u2014and tell us why), and Analytics gave us the ability to see all ",(0,o.jsx)(t.code,{children:"three"})," people use our app (hi mom!). Firebase gave us, as a small startup, the opportunity to scale our infrastructure up as the traffic of our game would, so for us, it was a no-brainer."]}),"\n",(0,o.jsx)(t.h2,{id:"flutter-takes-flight",children:"Flutter Takes Flight"}),"\n",(0,o.jsx)(t.p,{children:"Embarking on our Flutter journey felt like stepping into the cockpit of a sophisticated aircraft. At first glance, the array of buttons and controls was overwhelming, but as we gained familiarity, we found ourselves piloting a state-of-the-art machine capable of flying high across multiple platforms. Flutter's strength lies in its seamless operation across Android and iOS, coupled with its stellar integration with VS Code, providing an IDE that felt like having an expert co-pilot. Navigating the iOS ecosystem occasionally felt like flying through turbulent weather\u2014challenging yet thrilling. The end result? An app that performs splendidly on both vintage and the latest devices, crafted to perfection."}),"\n",(0,o.jsx)(t.h2,{id:"getx-to-the-rescue",children:"GetX to the Rescue"}),"\n",(0,o.jsx)(t.p,{children:"If Flutter turned us into skilled pilots, GetX was our advanced navigation system. Its approach to reactive programming was straightforward, guiding us through complex state management scenarios with precision. Think of it as having a top-tier GPS that not only predicts the traffic (or app states) ahead but also suggests the best routes (or data flows). This tight integration between controllers and views acted like a well-oiled autopilot, enhancing our development speed by minimizing manual coding and maximizing efficiency. Some critics say GetX may try to handle too much, like an overenthusiastic autopilot, but in our quest for efficient delivery, we found its capabilities to be exactly what we needed to stay on course without any hiccups."}),"\n",(0,o.jsx)(t.h2,{id:"lessons-learned",children:"Lessons Learned"}),"\n",(0,o.jsx)(t.p,{children:"Here are some nuggets of wisdom from my time in the trenches:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Embrace the documentation"}),": It's like the map to the treasure. Read it, cherish it, and keep it under your pillow."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Test on all the devices"}),": Just because it looks good on your flagship device, doesn\u2019t mean it will shine on all devices. Diversity in testing equals fewer angry emails."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"The user is king"}),": Feedback is golden, even if it's from Aunt Marge, who still uses a flip phone."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Laugh at the bugs"}),": You'll meet many. Treat them like whack-a-mole; it's more fun that way."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"shameless-plug",children:"Shameless Plug"}),"\n",(0,o.jsxs)(t.p,{children:["If you're curious about Y.A.S.S., you can check it out on the ",(0,o.jsx)(t.a,{href:"https://apps.apple.com/us/app/y-a-s-s/id6472488148",children:"App Store"})," and ",(0,o.jsx)(t.a,{href:"https://play.google.com/store/apps/details?id=com.threetenlabs.spidersolitaire",children:"Google Play"}),". And if you're feeling generous, leave a review! We're always looking to improve and make the game more enjoyable for everyone."]}),"\n",(0,o.jsx)(t.h2,{id:"in-conclusion",children:"In Conclusion"}),"\n",(0,o.jsx)(t.p,{children:"Building Y.A.S.S. has been a roller coaster. There were highs (it runs without crashing!), lows (it crashes!), and lots of learning. Would we do it again? Not only would we, but we're already planning our next game! Remember, when we started this conversation, I mentioned I had an idea for a game as well! Stay tuned for the next blog! We plan on sharing our journey with you all!"})]})}function u(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>r,a:()=>s});var o=a(7294);const i={},n=o.createContext(i);function s(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);